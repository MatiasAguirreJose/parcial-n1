#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>
#include "Funciones.h"
#define TRUE 0
#define FALSE 1
#define TAM 10

void SelecionarMenu(void){

	setbuf(stdout,NULL);

	printf("ingrese una opcion \n");
	printf("[1] - DAR DE ALTA \n");
	printf("[2] - MODIFICAR DATOS \n");
	printf("[3] - ELIMINAR ID \n");
	printf("[4] - CREAR PEDIDO DE RECOLECCION  \n");
	printf("5 \n");
	printf("[6] asdasdasdsa\n");
	printf("7 \n");
	printf("8 \n");
	printf("9 \n");
	printf("10 \n");

}


int InicializarClientes(Clientes* muestra, Pedido* clientes, int tam){

	setbuf(stdout,NULL);

	int retorno;
	retorno = -1;

	if(muestra != NULL && tam>=0 && clientes !=NULL ){
		for (int i = 0; i < tam; i++) {
			muestra[i].isEmpty = TRUE;
			clientes[i].isEmpty = TRUE;

		}
		retorno = 0;
	}


	return retorno;

}

//1--------------------------------------------------------------------------------------------------------!!
int AniadirCliente(Clientes* muestra, int tamanio, int id, char empresa[],char localidad[], int cuit, char direccion[]){
	 setbuf(stdout,NULL);
	int retorno ;
	retorno = -1;

	if(muestra != NULL && tamanio >= 0 && id >= 0){

     for ( int i = 0;  i < tamanio; ++ i) {
    	 if( muestra[i].isEmpty == TRUE ){

			muestra[i].idCliente = id;
			strcpy(muestra[i].Empresa, empresa);
			strcpy(muestra[i].localidad, localidad);
			strcpy(muestra[i].direccion, direccion);
			muestra[i].cuit = cuit;
			muestra[i].isEmpty = FALSE;

			retorno = 0;

			break;

			}
		}
	}

return retorno;
}
//--------------------------------------------------------------------------------------------------------!!
void MostrarDatos(Clientes* muestra, int tamanio){
	if(muestra != NULL && tamanio >= 0 ){
	for ( int i = 0;  i < tamanio;  i++) {

		if(muestra[i].isEmpty == FALSE){
			printf("El ID  %d \n",muestra[i].idCliente);
			printf("El nombre del Cliente es %s \n",muestra[i].Empresa);
			printf("La localidad del Cliente es %s \n",muestra[i].localidad);
			printf("La direccion del Cliente es %s \n",muestra[i].direccion);
			printf("El cuit del Cliente es %d \n",muestra[i].cuit);


		}

	 }
	}
}




void ModificarDatosCliente(Clientes* muestra, int tam, int idModificar){


	for ( int i = 0;  i < tam;  i++) {
		if(muestra[i].idCliente == idModificar){
			printf("ingrese la nueva direccion");
			fflush(stdin);
			gets(muestra[i].direccion);

			printf("ingrese la nueva localidad");
			fflush(stdin);
			gets(muestra[i].localidad);
		}

	}

}


void ElimiarCliente(Clientes* muestra, int tam, int idEliminar){
	int Respuesta;
	for ( int i = 0;  i < tam;  i++) {

		if(muestra[i].idCliente == idEliminar){
			printf("Esta seguro que quiere eliminar? 1- si  2- no");
			fflush(stdin);
			scanf("%d",&Respuesta);

			if(Respuesta == 1){

				muestra[i].isEmpty = TRUE;
		}else {
			puts("no se elimino .... ");
		}


		}
	}



}


int PedidoRecoleccion(Clientes* muestra, Pedido* clientes, int tam ){
	int retorno;
	int id;
	int kilos;

	retorno = 0;
	if(muestra != NULL &&  tam >= 0 ){

		printf("Ingrese el id : ");
		fflush(stdin);
		scanf("%d",&id);




		for ( int i = 0;  i < tam;  i++) {

			if(clientes[i].isEmpty == TRUE && muestra[i].idCliente == id){


				printf("Ingrese los kilos : ");
				fflush(stdin);
				scanf("%d",&kilos);

				clientes[i].idCliente = id;
				clientes[i].idCliente = id;
				clientes[i].kilos = kilos;
				clientes[i].PedidosPendientes = 1;
				clientes[i].isEmpty = FALSE ;
				retorno = 1 ;

				break;

			}
		}


}
	return retorno;
}

void MostrarPedidosPendientes(Clientes* muestra, Pedido* clientes, int tam){



	if(muestra != NULL &&clientes!= NULL && tam >= 0 ){


		for ( int i = 0;  i < tam;  i++) {
			if(clientes[i].isEmpty == FALSE && muestra[i].isEmpty == FALSE){


				printf("El ID  %d \n",muestra[i].idCliente);
				printf("El nombre del Cliente es %s \n",muestra[i].Empresa);
				printf("lA ID RECOLECCION ES %d \n",clientes[i].idCliente);
				printf("La cantidad de pedidos pendientes es de  %d \n",clientes[i].PedidosPendientes);
				printf("los kilos totales que debe es de %d",clientes[i].kilos);

		}
		}


	}



}
